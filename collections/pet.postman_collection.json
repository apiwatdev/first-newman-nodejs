{
	"info": {
		"_postman_id": "0c611662-6c1b-448d-938f-37ac641004fb",
		"name": "pet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15960603"
	},
	"item": [
		{
			"name": "get pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Each item in the array is an object with name, age, and species properties\", function () {",
							"    pm.response.json().forEach(function (item) {",
							"        pm.expect(item).to.be.an('object').that.has.all.keys('name', 'age', 'species');",
							"    });",
							"});",
							"",
							"pm.test(\"age property in each item is a number\", function () {",
							"    pm.response.json().forEach(function (item) {",
							"        pm.expect(item.age).to.be.a('number');",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:3000/api/pets",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"api",
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has status code 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response is JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response has name property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"});",
							"",
							"pm.test(\"Response has age property which is a number\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('age').that.is.a('number');",
							"});",
							"",
							"pm.test(\"Response has species property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('species');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"KN\",\n    \"age\": 7,\n    \"species\": \"Dog\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/api/pets",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"api",
						"pets"
					]
				}
			},
			"response": []
		}
	]
}